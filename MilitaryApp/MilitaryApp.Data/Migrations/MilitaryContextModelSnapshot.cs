// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MilitaryApp.Data;

namespace MilitaryApp.Data.Migrations
{
    [DbContext(typeof(MilitaryContext))]
    partial class MilitaryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MilitaryApp.Domain.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("MilitaryApp.Domain.Horse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MilitaryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MilitaryId")
                        .IsUnique();

                    b.ToTable("Horses");
                });

            modelBuilder.Entity("MilitaryApp.Domain.King", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KingName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kings");
                });

            modelBuilder.Entity("MilitaryApp.Domain.Military", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KingId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KingId");

                    b.ToTable("Militaries");
                });

            modelBuilder.Entity("MilitaryApp.Domain.MilitaryBattle", b =>
                {
                    b.Property<int>("MilitaryId")
                        .HasColumnType("int");

                    b.Property<int>("BattleId")
                        .HasColumnType("int");

                    b.HasKey("MilitaryId", "BattleId");

                    b.HasIndex("BattleId");

                    b.ToTable("MilitaryBattle");
                });

            modelBuilder.Entity("MilitaryApp.Domain.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MilitaryId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MilitaryId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("MilitaryApp.Domain.Horse", b =>
                {
                    b.HasOne("MilitaryApp.Domain.Military", null)
                        .WithOne("Horse")
                        .HasForeignKey("MilitaryApp.Domain.Horse", "MilitaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MilitaryApp.Domain.Military", b =>
                {
                    b.HasOne("MilitaryApp.Domain.King", "King")
                        .WithMany()
                        .HasForeignKey("KingId");
                });

            modelBuilder.Entity("MilitaryApp.Domain.MilitaryBattle", b =>
                {
                    b.HasOne("MilitaryApp.Domain.Battle", "Battle")
                        .WithMany("MilitaryBattles")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilitaryApp.Domain.Military", "Military")
                        .WithMany("MilitaryBattles")
                        .HasForeignKey("MilitaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MilitaryApp.Domain.Quote", b =>
                {
                    b.HasOne("MilitaryApp.Domain.Military", "Military")
                        .WithMany("Quotes")
                        .HasForeignKey("MilitaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
